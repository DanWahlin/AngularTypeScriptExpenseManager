{"version":3,"sources":["expenseApp/controllers/employees/employeeEdit.controller.ts"],"names":["expenseApp","expenseApp.employees","expenseApp.employees.EmployeeEditController","expenseApp.employees.EmployeeEditController.constructor","expenseApp.employees.EmployeeEditController.isStateSelected","expenseApp.employees.EmployeeEditController.saveEmployee","expenseApp.employees.EmployeeEditController.deleteEmployee","expenseApp.employees.EmployeeEditController.routeChange","expenseApp.employees.EmployeeEditController.getStates","expenseApp.employees.EmployeeEditController.processSuccess","expenseApp.employees.EmployeeEditController.processError","expenseApp.employees.EmployeeEditController.startTimer"],"mappings":"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","file":"expenseApp/controllers/employees/employeeEdit.controller.js","sourcesContent":["namespace expenseApp.employees {\n\n    interface IEditFormScope extends ng.IScope {\n        editForm: ng.IFormController;\n    }\n\n    class EmployeeEditController {\n\n        employeeId: number;\n        timer;\n        onRouteChangeOff;\n\n        editForm;\n        employee: shared.IEmployee = <shared.IEmployee>{};\n        states: shared.IState[] = [];\n        title: string;\n        buttonText: string;\n        updateStatus: boolean = false;\n        errorMessage: string = '';\n\n        static $inject = ['$scope', '$location', '$routeParams', '$timeout',\n                          'expenseApp.services.dataService', 'expenseApp.services.modalService'];\n        constructor(private $scope: IEditFormScope, private $location: ng.ILocationService,\n                    private $routeParams: shared.IEmployeeRouteParams, private $timeout: ng.ITimeoutService,\n                    private dataService: expenseApp.services.DataService,\n                    private modalService: expenseApp.services.ModalService) {\n\n            this.employeeId = (this.$routeParams.employeeId) ? parseInt(this.$routeParams.employeeId, 10) : 0;\n            this.employee.id = this.employeeId;\n            this.title = (this.employeeId > 0) ? 'Edit' : 'Add';\n            this.buttonText = (this.employeeId > 0) ? 'Update' : 'Add';\n\n            this.getStates().then(() => {\n                if (this.employeeId > 0) {\n                    this.dataService.getEmployee(this.employeeId).then((employee: shared.IEmployee) => {\n                       this.employee = employee;\n                    }, this.processError);\n                }\n            });\n\n            //Make sure they're warned if they made a change but didn't save it\n            //Call to $on returns a \"deregistration\" function that can be called to\n            //remove the listener (see routeChange() for an example of using it)\n            this.onRouteChangeOff = this.$scope.$on('$locationChangeStart', this.routeChange.bind(this));\n        }\n\n        isStateSelected(employeeStateId, stateId) {\n            return employeeStateId === stateId;\n        }\n\n        saveEmployee() {\n            if (this.$scope.editForm.$valid) {\n                if (!this.employee.id) {\n                    this.dataService.insertEmployee(this.employee).then((insertedEmployee: shared.IEmployee) => {\n                        this.employee = insertedEmployee;\n                        this.processSuccess();\n                    },\n                    this.processError);\n                } else {\n                    this.dataService.updateEmployee(this.employee).then((status) => {\n                        this.processSuccess();\n                    },\n                    this.processError.bind(this));\n                }\n            }\n        }\n\n        deleteEmployee() {\n            var empName = this.employee.name.first + ' ' + this.employee.name.last;\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                actionButtonText: 'Delete Employee',\n                headerText: 'Delete ' + empName + '?',\n                bodyText: 'Are you sure you want to delete this employee?'\n            };\n\n            this.modalService.showModal({}, modalOptions).then((result) => {\n                if (result === 'ok') {\n                    this.dataService.deleteEmployee(this.employee).then(() => {\n                        this.onRouteChangeOff(); //Stop listening for location changes\n                        this.$location.path('/employees');\n                    }, this.processError);\n                }\n            });\n        }\n\n        routeChange(event, newUrl) {\n            //Navigate to newUrl if the form isn't dirty\n            if (!this.editForm || !this.editForm.$dirty) { return; }\n\n            var modalOptions = {\n                closeButtonText: 'Cancel',\n                actionButtonText: 'Ignore Changes',\n                headerText: 'Unsaved Changes',\n                bodyText: 'You have unsaved changes. Leave the page?'\n            };\n\n            this.modalService.showModal({}, modalOptions).then((result) => {\n                if (result === 'ok') {\n                    this.onRouteChangeOff(); //Stop listening for location changes\n                    this.$location.path(this.$location.url(newUrl).hash()); //Go to page they're interested in\n                }\n            });\n\n            //prevent navigation by default since we'll handle it\n            //once the user selects a dialog option\n            event.preventDefault();\n            return;\n        }\n\n        getStates() {\n            return this.dataService.getStates().then(\n            (states: shared.IState[]) => {\n                this.states = states;\n            }, this.processError);\n        }\n\n        processSuccess() {\n            //this.$scope.editForm.$dirty = false;\n            this.updateStatus = true;\n            this.title = 'Edit';\n            this.buttonText = 'Update';\n            this.startTimer();\n        }\n\n        processError(error) {\n            this.errorMessage = error.message;\n            this.startTimer();\n        }\n\n        startTimer() {\n            this.timer = this.$timeout(() => {\n                this.$timeout.cancel(this.timer);\n                this.errorMessage = '';\n                this.updateStatus = false;\n            }, 3000);\n        }\n    }\n\n    angular.module('expenseApp').controller('expenseApp.employees.EmployeeEditController', EmployeeEditController);\n\n}\n"],"sourceRoot":"/source/"}