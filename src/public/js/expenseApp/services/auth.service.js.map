{"version":3,"sources":["expenseApp/services/auth.service.ts"],"names":["expenseApp","expenseApp.services","expenseApp.services.AuthService","expenseApp.services.AuthService.constructor","expenseApp.services.AuthService.login","expenseApp.services.AuthService.logout","expenseApp.services.AuthService.redirectToLogin","expenseApp.services.AuthService.changeAuth"],"mappings":"AAAA,6DAA6D;AAC7D,oEAAoE;AAEpE,IAAO,UAAU,CA8ChB;AA9CD,WAAO,UAAU;IAACA,IAAAA,QAAQA,CA8CzBA;IA9CiBA,WAAAA,QAAQA,EAACA,CAACA;QACxBC,YAAYA,CAACA;QAEbA;YAQIC,qBAAoBA,UAAgCA,EAAUA,KAAsBA;gBAAhEC,eAAUA,GAAVA,UAAUA,CAAsBA;gBAAUA,UAAKA,GAALA,KAAKA,CAAiBA;gBAPpFA,gBAAWA,GAAWA,YAAYA,CAACA;gBACnCA,SAAIA,GAAGA;oBACHA,SAASA,EAAEA,QAAQA;oBACnBA,eAAeA,EAAEA,KAAKA;oBACtBA,KAAKA,EAAEA,IAAIA;iBACdA,CAACA;YAIFA,CAACA;YAEDD,2BAAKA,GAALA,UAAMA,KAAKA,EAAEA,QAAQA;gBAArBE,iBAOCA;gBANGA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAACA,IAAIA,CAACA,WAAWA,GAAGA,OAAOA,EAAEA,EAAEA,SAASA,EAAEA,EAAEA,QAAQA,EAAEA,KAAKA,EAAEA,QAAQA,EAAEA,QAAQA,EAAEA,EAAEA,CAACA,CAACA,IAAIA,CAC/GA,UAACA,OAA4CA;oBACzCA,IAAIA,QAAQA,GAAGA,OAAOA,CAACA,IAAIA,CAACA;oBAC5BA,KAAIA,CAACA,UAAUA,CAACA,QAAQA,CAACA,CAACA;oBAC1BA,MAAMA,CAACA,QAAQA,CAACA;gBACpBA,CAACA,CAACA,CAACA;YACPA,CAACA;YAEDF,4BAAMA,GAANA;gBAAAG,iBAOCA;gBANGA,MAAMA,CAACA,IAAIA,CAACA,KAAKA,CAACA,GAAGA,CAACA,IAAIA,CAACA,WAAWA,GAAGA,QAAQA,CAACA,CAACA,IAAIA,CACnDA,UAACA,OAA4CA;oBACzCA,IAAIA,QAAQA,GAAGA,CAACA,OAAOA,CAACA,IAAIA,CAACA;oBAC7BA,KAAIA,CAACA,UAAUA,CAACA,QAAQA,CAACA,CAACA;oBAC1BA,MAAMA,CAACA,QAAQA,CAACA;gBACpBA,CAACA,CAACA,CAACA;YACXA,CAACA;YAEDH,qCAAeA,GAAfA;gBACII,IAAIA,CAACA,UAAUA,CAACA,UAAUA,CAACA,iBAAiBA,EAAEA,IAAIA,CAACA,CAACA;YACxDA,CAACA;YAEDJ,gCAAUA,GAAVA,UAAWA,QAAQA;gBACfK,IAAIA,CAACA,IAAIA,CAACA,eAAeA,GAAGA,QAAQA,CAACA;gBACrCA,IAAIA,CAACA,UAAUA,CAACA,UAAUA,CAACA,oBAAoBA,EAAEA,QAAQA,CAACA,CAACA;YAC/DA,CAACA;YAELL,kBAACA;QAADA,CAvCAD,AAuCCC,IAAAD;QAvCYA,oBAAWA,cAuCvBA,CAAAA;QAEDA,OAAOA,CAACA,MAAMA,CAACA,YAAYA,CAACA,CAACA,OAAOA,CAACA,iCAAiCA,EAAEA,WAAWA,CAACA,CAACA;IAEzFA,CAACA,EA9CiBD,QAAQA,GAARA,mBAAQA,KAARA,mBAAQA,QA8CzBA;AAADA,CAACA,EA9CM,UAAU,KAAV,UAAU,QA8ChB","file":"expenseApp/services/auth.service.js","sourcesContent":["///<reference path=\"../../../../../tools/typings/tsd.d.ts\" />\n///<reference path=\"../../../../../tools/typings/expenseApp.d.ts\" />\n\nmodule expenseApp.services {\n    'use strict';\n\n    export class AuthService {\n        serviceBase: string = '/api/auth/';\n        user = {\n            loginPath: '/login',\n            isAuthenticated: false,\n            roles: null\n        };\n        \n        constructor(private $rootScope: ng.IRootScopeService, private $http: ng.IHttpService) {\n            \n        }\n\n        login(email, password) : ng.IPromise<boolean>  {\n            return this.$http.post(this.serviceBase + 'login', { userLogin: { userName: email, password: password } }).then(\n            (results: ng.IHttpPromiseCallbackArg<boolean>) => {\n                var loggedIn = results.data;\n                this.changeAuth(loggedIn);\n                return loggedIn;\n            });\n        }\n\n        logout() : ng.IPromise<boolean> {\n            return this.$http.get(this.serviceBase + 'logout').then(\n                (results: ng.IHttpPromiseCallbackArg<boolean>) => {\n                    var loggedIn = !results.data;\n                    this.changeAuth(loggedIn);\n                    return loggedIn;\n                });\n        }\n\n        redirectToLogin() {\n            this.$rootScope.$broadcast('redirectToLogin', null);\n        }\n\n        changeAuth(loggedIn) {\n            this.user.isAuthenticated = loggedIn;\n            this.$rootScope.$broadcast('loginStatusChanged', loggedIn);\n        }\n\n    }\n\n    angular.module('expenseApp').service('expenseApp.services.authService', AuthService);\n\n}"],"sourceRoot":"/source/"}